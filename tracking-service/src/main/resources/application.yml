server:
  port: 8089

spring:
  application:
    name: tracking-service
  
  datasource:
    url: jdbc:postgresql://tracking-db:5432/tracking_db
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: tracking-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true

logging:
  level:
    com.example.trackingservice: DEBUG
    org.springframework.kafka: DEBUG
    org.springframework.data.redis: DEBUG

# Tracking service specific configurations
tracking:
  gps:
    update-interval: 5000 # 5 seconds
    simulation-enabled: true
  kafka:
    topics:
      location-updates: location-updates
      delivery-status: delivery-status
  redis:
    keys:
      driver-locations: driver:locations
      order-tracking: order:tracking